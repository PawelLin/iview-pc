
import rsa from './rsa'

const RSA_EXPONENT = '10001'
const RSA_MODULUS = 'DE3D7D7639DB81D0E920EA7026A6EB47EA1E31F463BE200B54571CA496DCB86DB3D8E54DEC3A8BAF757147635A9785C086FBCB55E14D1E38700120D3F8CB753AD97AEC2F143A13D73937380EFDD2DC210996ADAF666DDB1319060F883EB8E30490C006B30574B48A18424759D996C3FF9454A16695060751C0463D9CA329897BBDB3E8B815BD6E92A0DBAFE4169E8CB624A137AA963F98C27EDE9BBE0ADB7C630D881BD5129D66FA63B68125880EE914CC81910C11FCDB6E7C8F33E8ADB454B6013FBD2C207ABF3F9CDB4B6CFE64438C926D65E75AD145F520591A9103EE88402DBC7BF3DD8CB3F87D4087A8233177CB2ADFF846A7D3BA529DD3AA53FE2AA74B'

/**
 * rsa加密
 * @param {Object} text
 */
export function rsaEncrypt (text) {
    let key = new rsa.RSAKeyPair(RSA_EXPONENT, '', RSA_MODULUS)
    let encryptRtn = rsa.encryptedString(key, text)
    return encryptRtn
}

/**
 * rsa解密
 * @param {Object} text
 */
export function rsaDecrypt (text) {
    let key = new rsa.RSAKeyPair('', RSA_EXPONENT, RSA_MODULUS)
    let decryptedRtn = rsa.decryptedString(key, text)
    return decryptedRtn
}
